@page "/counter"
@using Tewr.Blazor.FileReader
@using System.IO;
@using System.Xml;
@using Models;

@inject IFileReaderService fileReaderService;


<h1>Add .xml file with KNX Telegrams</h1>

@*<p>Current count: @currentCount</p>*@

@*<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>*@

<input type="file" @ref=inputTypeFileElement />
<a></a>
<button @onclick=ReadFile>Read file</button>

<h3>@currentCount</h3>

<Grid Items="DgTelegramsList" class="table table-bordered" RowClass='(row, index) => row.TID > 0 ? "table-success" : ""'>
    <GridColumn TRowData="Telegram" Expression="c => c.TID" />
    <GridColumn TRowData="Telegram" Expression="c => c.Timestamp" Format="d" />
    <GridColumn TRowData="Telegram" Expression="c => c.Service" />
    <GridColumn TRowData="Telegram" Expression="c => c.FrameFormat" />
    <GridColumn TRowData="Telegram" Title="Raw Data">@context.RawData</GridColumn>
</Grid>

<h3>@doc</h3>

@code {
    private int currentCount = 0;
    private ElementReference inputTypeFileElement;
    private string doc = "";

    public List<Telegram> TelegramsList = new List<Telegram>();
    public List<Telegram> DgTelegramsList = new List<Telegram>();

    public async Task ReadFile()
    {
        currentCount = 0;
        TelegramsList.Clear();
        DgTelegramsList.Clear();
        foreach (var file in await fileReaderService.CreateReference(inputTypeFileElement).EnumerateFilesAsync())
        {
            XmlDocument xmlDoc = new XmlDocument();
            using (MemoryStream memStream = await file.CreateMemoryStreamAsync())
            {
                xmlDoc.Load(memStream);
            }
            XmlNodeList elem = xmlDoc.GetElementsByTagName("Telegram");
            foreach (var e in elem)
            {
                var telegram = new Telegram();
                XmlElement temp = (XmlElement)e;

                telegram.TimestampS = temp.GetAttributeNode("Timestamp").Value;
                var tempDate = DateTime.Parse(telegram.TimestampS);
                telegram.Timestamp = tempDate.AddHours(2);

                telegram.Service = temp.GetAttributeNode("Service").Value;
                telegram.FrameFormat = temp.GetAttributeNode("FrameFormat").Value;
                telegram.RawData = temp.GetAttributeNode("RawData").Value;

                telegram.TID = TelegramsList.Count;
                currentCount = telegram.TID
                TelegramsList.Add(telegram);
            }

        }
        DgTelegramsList = new List<Telegram>((from t in TelegramsList
                                              orderby t.TID descending
                                              select t).Take(10));
    }

    private void IncrementCount()
    {
        currentCount++;
    }

}
